// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b1KGPsGct1aorWokhuN4v9
// Component: COa--L9f_Kv7Q
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: avfy2MiN-zeUr/component
import Counter from "../../Counter" // plasmic-import: a65RSNcF-F1UK/component
import Button from "../../Button" // plasmic-import: z23PawXpoh6Su/component
import Product from "../../Product" // plasmic-import: aO0jwNMp3cn47/component
import TextInput from "../../TextInput" // plasmic-import: xGJADBXpQ5tshn/component
import { useScreenVariants as useScreenVariantsuAnW2ZhaPvFnS } from "./PlasmicGlobalVariant__Screen" // plasmic-import: U_AnW2ZhaPVFnS/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_launch_page.module.css" // plasmic-import: b1KGPsGct1aorWokhuN4v9/projectcss
import * as sty from "./PlasmicHomepage.module.css" // plasmic-import: COa--L9f_Kv7Q/css
import Icon3Icon from "./icons/PlasmicIcon__Icon3" // plasmic-import: JPacNuVlikOm3I/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2" // plasmic-import: RVw3L3-FiYVJfc/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28" // plasmic-import: M4_U4F3txrzRcr/icon
import IconIcon from "./icons/PlasmicIcon__Icon" // plasmic-import: El12qygDK9sQAq/icon
import mohammadMetriE0On3VGrBcUnsplashjpgMeyNkUth6CHc6M from "./images/mohammadMetriE0On3VGrBcUnsplashjpg.jpeg" // plasmic-import: MEYNkUth6cHC6M/picture
import devinAveryBrVqq2Uak4EUnsplashjpg2MwicugZk03V6H from "./images/devinAveryBrVqq2Uak4EUnsplashjpg.jpeg" // plasmic-import: 2mwicugZK03v6H/picture
import fernandoAndradePotCpeCw8AUnsplashjpgFTiOcb15H9Vf from "./images/fernandoAndradePotCpeCw8AUnsplashjpg.jpeg" // plasmic-import: fTIOcb15H-9VF-/picture
import wristWatch21593511920Jpg1CjYeObv9GH54Q from "./images/wristWatch21593511920Jpg.jpeg" // plasmic-import: 1CJYeOBV9gH54q/picture
import giorgioTrovatoK62U25Jk6VoUnsplashjpgKxltynKeAkNmi from "./images/giorgioTrovatoK62U25Jk6VoUnsplashjpg.jpeg" // plasmic-import: KxltynKEAk_Nmi/picture
import imaniBahatiLxVxPa1LovmUnsplashjpgIktZPaYwobn1B from "./images/imaniBahatiLxVxPa1LovmUnsplashjpg.jpeg" // plasmic-import: IKT_zPAYwobn1b/picture
import grantRitchieNWXNttWvGsUnsplash1JpgKfcnvd222DOa5C from "./images/grantRitchieNWXNttWvGsUnsplash1Jpg.jpeg" // plasmic-import: KFCNVD222DOa5C/picture
import charlesDeluvio1Nx1Qr5DTeUnsplashjpgD3GjpkF3MVdhMx from "./images/charlesDeluvio1Nx1Qr5DTeUnsplashjpg.jpeg" // plasmic-import: d3GjpkF3MVdhMX/picture
import groupLogosvgDliHcHuwFh2DPv from "./images/groupLogosvg.svg" // plasmic-import: dliHCHuwFH2DPv/picture

export const PlasmicHomepage__VariantProps = new Array()

export const PlasmicHomepage__ArgProps = new Array()

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuAnW2ZhaPvFnS(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <nav
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            className={classNames(projectcss.all, sty.nav)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />
          </nav>

          {true ? (
            <section className={classNames(projectcss.all, sty.section__ezbWv)}>
              <div className={classNames(projectcss.all, sty.freeBox__aLWp)}>
                <div className={classNames(projectcss.all, sty.columns__fume4)}>
                  <div
                    className={classNames(projectcss.all, sty.column__h6RSq)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__quio4)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "We started with humble beginnings"
                          : "Coming Soon"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rT1Sb
                        )}
                      >
                        {"5 - 01 - 2022"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns__vIdZn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__wfNuM
                          )}
                        >
                          <Counter
                            className={classNames(
                              "__wab_instance",
                              sty.counter__jgMm9
                            )}
                          />
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__l3JmU
                          )}
                        >
                          <Counter
                            className={classNames(
                              "__wab_instance",
                              sty.counter__pdShz
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2___6P4Yr
                              )}
                            >
                              {"22"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sjxoO
                              )}
                            >
                              {"Hours"}
                            </div>
                          </Counter>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__sQ6Xz
                          )}
                        >
                          <Counter
                            className={classNames(
                              "__wab_instance",
                              sty.counter___84Aix
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__fjoDq
                              )}
                            >
                              {"16"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__s8Vjz
                              )}
                            >
                              {"Mintutes"}
                            </div>
                          </Counter>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___0X27F
                          )}
                        >
                          <Counter
                            className={classNames(
                              "__wab_instance",
                              sty.counter__em3OQ
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__uw4Cm
                              )}
                            >
                              {"32"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rrVzN
                              )}
                            >
                              {"Sec"}
                            </div>
                          </Counter>
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hHQx
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__g387H
                          )}
                          color={"sand"}
                          size={"compact"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__udrpH
                            )}
                          >
                            {"Get Notified"}
                          </div>
                        </Button>
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          <section className={classNames(projectcss.all, sty.section___4FV1)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ozucy)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__di1Sc
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Top Collections"
                  : "Brand-new collection"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kgY4J
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing"
                }
              </div>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__oe8Zy)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9Dl5H)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pm4V)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__nqgUj
                  )}
                >
                  {"More related products"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jItat
                  )}
                >
                  {"Lorem ipsum dolor sit amet, consectetur adipiscing"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___8INl)}
              >
                <div className={classNames(projectcss.all, sty.column__nVKpR)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__cBIvV
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__bvGR
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__mAv8M)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: mohammadMetriE0On3VGrBcUnsplashjpgMeyNkUth6CHc6M,
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__kfJvl)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__shasl
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__eqzdd
                          )}
                        >
                          {"Product two"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__obQw4)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: devinAveryBrVqq2Uak4EUnsplashjpg2MwicugZk03V6H,
                          fullWidth: 640,
                          fullHeight: 427,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__oJik)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__dp9As
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__iMpp3
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__m5UUz)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: fernandoAndradePotCpeCw8AUnsplashjpgFTiOcb15H9Vf,
                          fullWidth: 640,
                          fullHeight: 920,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__bFv78)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__dZ0Jw
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__rvHMx
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__aBr4C)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: wristWatch21593511920Jpg1CjYeObv9GH54Q,
                          fullWidth: 1920,
                          fullHeight: 1223,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__qh79U)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product___9On7A
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__clOro
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__x6Ux6)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: giorgioTrovatoK62U25Jk6VoUnsplashjpgKxltynKeAkNmi,
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__zc937)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__gt2UR
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__gtZt6
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__swXUl)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: imaniBahatiLxVxPa1LovmUnsplashjpgIktZPaYwobn1B,
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__o9EUd)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__pafYq
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__qA4Yq
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__sab1X)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: grantRitchieNWXNttWvGsUnsplash1JpgKfcnvd222DOa5C,
                          fullWidth: 2560,
                          fullHeight: 3840,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__hxS)}>
                  {true ? (
                    <Product
                      className={classNames(
                        "__wab_instance",
                        sty.product__sfrTl
                      )}
                      slot={
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__cr0Bp
                          )}
                        >
                          {"Product title"}
                        </h4>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__n7Ix)}
                        displayHeight={
                          "430px /* plasmic-token: DDsTAQcHN9f0LV */"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: charlesDeluvio1Nx1Qr5DTeUnsplashjpgD3GjpkF3MVdhMx,
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined,
                        }}
                      />
                    </Product>
                  ) : null}
                </div>
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__wd9Ks)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bb5Oe)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__kwso1
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Get In Touch"
                  : "Sign up for the newsletter"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fKqYm
                )}
              >
                {"Lorem ipsum dolor sit amet."}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__jwGOy)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kwr86)}
                  >
                    <TextInput
                      className={classNames(
                        "__wab_instance",
                        sty.textInput___9V1Mg
                      )}
                      placeholder={"Enter your Email  here"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__h2BB6
                      )}
                      color={"sand"}
                      size={"compact"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___38O2Q
                        )}
                      >
                        {"Submit"}
                      </div>
                    </Button>
                  </div>
                ) : null}
              </div>
            </p.Stack>
          </section>

          <div className={classNames(projectcss.all, sty.freeBox__kJNrw)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__si6O9)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pF7L3)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___9IBt4)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"120px"}
                  src={{
                    src: groupLogosvgDliHcHuwFh2DPv,
                    fullWidth: 300,
                    fullHeight: 105,
                    aspectRatio: 2.864865,
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__aw7Fn)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mpNx3
                    )}
                  >
                    {
                      "Lorem Ipsum Dolor Sit Amet, Consectetur Adipiscing Lorem Ipsum Dolor Sit Amet, Consectetur ."
                    }
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___9OPj8)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg___8PhWl)}
                      role={"img"}
                    />

                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__c5Aq)}
                      role={"img"}
                    />

                    <Icon28Icon
                      className={classNames(projectcss.all, sty.svg__gPqHe)}
                      role={"img"}
                    />
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4Ki7Y)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__purqt
                  )}
                >
                  {"SUPPORT"}
                </h3>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ds7A
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___0YzrW)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gh6Cf
                    )}
                  >
                    {"FAQ"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__gDw1G)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__uDvx0
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__lxbe)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yScoh
                    )}
                  >
                    {"Shipping"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__x8PhJ)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__hL75
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__wuCSo)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w5W10
                    )}
                  >
                    {"Returns + Exchanges"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__bUuoY)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__kUpyA
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___0BMl6)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s4JQc
                    )}
                  >
                    {"Contact Us"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___5QSPk)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eJwQj)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__wd9EB
                  )}
                >
                  {"COMPANY"}
                </h3>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___8KODf
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__vrAzc)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wpyR0
                    )}
                  >
                    {"Our Mission"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__tecYe)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__hXPzp
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__tjI5I)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dAuxv
                    )}
                  >
                    {"Sustainability"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__zn44)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___7Se1M
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__hq0Pe)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__enVam
                    )}
                  >
                    {"Stores"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__c8NA)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__tSEf
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__heX1Y)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ipNtx
                    )}
                  >
                    {"Careers"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__jnnlP)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t4BI1)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___3HBla
                  )}
                >
                  {"Newsletter"}
                </h3>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___49Qnj
                  )}
                >
                  {"Lorem ipsum dolor sit amet, "}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zkRPd)}
                  >
                    <TextInput
                      className={classNames(
                        "__wab_instance",
                        sty.textInput___0U7L6
                      )}
                      placeholder={"Enter email  address"}
                    />

                    <Button
                      className={classNames("__wab_instance", sty.button__xkrS)}
                      color={"sand"}
                      size={"compact"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__loPai
                        )}
                      >
                        {"SUbscribe"}
                      </div>
                    </Button>
                  </p.Stack>
                ) : null}
              </p.Stack>
            </p.Stack>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: ["root", "nav", "header", "h1"],
  nav: ["nav", "header"],
  header: ["header"],
  h1: ["h1"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps,
    })

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage"
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`
  }
  return func
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    nav: makeNodeComponent("nav"),
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
  }
)

export default PlasmicHomepage
/* prettier-ignore-end */
